/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package accountgen.view;

import accountgen.controller.Controller;
import accountgen.model.Consts;
import accountgen.model.Person;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author namishah
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    List<Person> accounts;
    public MainFrame() {
        initComponents();
        pnlTabs.setEnabledAt(2, false);
        accounts = new ArrayList<>();
        pgrBar.setMinimum(0);
        pgrBar.setMaximum(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        pnlTabs = new javax.swing.JTabbedPane();
        pnlGenerate = new javax.swing.JPanel();
        lblMale = new javax.swing.JLabel();
        lblMinAge = new javax.swing.JLabel();
        lblMaxAge = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        sliderGender = new javax.swing.JSlider();
        lblFemale = new javax.swing.JLabel();
        spinnerMinAge = new javax.swing.JSpinner();
        spinnerMaxAge = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCountry = new javax.swing.JList();
        btnGenerate = new javax.swing.JButton();
        tglFile = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        tglDB = new javax.swing.JToggleButton();
        spinnerAmount = new javax.swing.JSpinner();
        btnClear = new javax.swing.JButton();
        pnlDisplay = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAddress = new javax.swing.JTable();
        btnReadDB = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblDB = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblVehicle = new javax.swing.JTable();
        pnlSettings = new javax.swing.JPanel();

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMale.setText("(50%) Male");

        lblMinAge.setText("Min age");

        lblMaxAge.setText("Max age");

        lblCountry.setText("Country");

        sliderGender.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderGenderStateChanged(evt);
            }
        });

        lblFemale.setText("Female (50%)");

        spinnerMinAge.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        spinnerMaxAge.setModel(new javax.swing.SpinnerNumberModel(100, 0, 100, 1));

        lstCountry.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Belgium" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstCountry.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCountry.setSelectedIndex(0);
        jScrollPane1.setViewportView(lstCountry);

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        tglFile.setBackground(new java.awt.Color(255, 153, 153));
        tglFile.setSelected(true);
        tglFile.setText("Export to file");

        txtConsole.setEditable(false);
        txtConsole.setBackground(new java.awt.Color(0, 0, 0));
        txtConsole.setColumns(20);
        txtConsole.setForeground(new java.awt.Color(0, 204, 51));
        txtConsole.setLineWrap(true);
        txtConsole.setRows(5);
        txtConsole.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane2.setViewportView(txtConsole);

        jLabel1.setText("Amount");

        tglDB.setBackground(new java.awt.Color(255, 153, 153));
        tglDB.setSelected(true);
        tglDB.setText("Export to DB");

        spinnerAmount.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(1), null, Integer.valueOf(1)));

        btnClear.setText("clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGenerateLayout = new javax.swing.GroupLayout(pnlGenerate);
        pnlGenerate.setLayout(pnlGenerateLayout);
        pnlGenerateLayout.setHorizontalGroup(
            pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerateLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlGenerateLayout.createSequentialGroup()
                                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(pnlGenerateLayout.createSequentialGroup()
                                            .addComponent(lblFemale)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblMale))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGenerateLayout.createSequentialGroup()
                                            .addComponent(tglFile, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(tglDB, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sliderGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(pnlGenerateLayout.createSequentialGroup()
                                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spinnerMinAge, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblMinAge))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spinnerMaxAge, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblMaxAge))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(spinnerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(pgrBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(376, 376, 376))
        );
        pnlGenerateLayout.setVerticalGroup(
            pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerateLayout.createSequentialGroup()
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCountry)
                            .addComponent(lblMinAge)
                            .addComponent(lblMaxAge)
                            .addComponent(jLabel1))
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlGenerateLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerateLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(spinnerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinnerMaxAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinnerMinAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(313, 313, 313))))
                    .addGroup(pnlGenerateLayout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFemale)
                            .addComponent(lblMale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tglFile, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tglDB, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgrBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlTabs.addTab("Generate", pnlGenerate);

        tblAddress.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Country", "City", "Street", "Postcode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblAddress);
        if (tblAddress.getColumnModel().getColumnCount() > 0) {
            tblAddress.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        btnReadDB.setText("Read Database");
        btnReadDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadDBActionPerformed(evt);
            }
        });

        tblDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Gender", "Firstname", "Lastname", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDBMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblDB);
        if (tblDB.getColumnModel().getColumnCount() > 0) {
            tblDB.getColumnModel().getColumn(0).setPreferredWidth(15);
            tblDB.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        tblVehicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Brand", "Model", "Year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblVehicle);
        if (tblVehicle.getColumnModel().getColumnCount() > 0) {
            tblVehicle.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout pnlDisplayLayout = new javax.swing.GroupLayout(pnlDisplay);
        pnlDisplay.setLayout(pnlDisplayLayout);
        pnlDisplayLayout.setHorizontalGroup(
            pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                        .addComponent(btnReadDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlDisplayLayout.setVerticalGroup(
            pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReadDB, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        pnlTabs.addTab("Display", pnlDisplay);

        javax.swing.GroupLayout pnlSettingsLayout = new javax.swing.GroupLayout(pnlSettings);
        pnlSettings.setLayout(pnlSettingsLayout);
        pnlSettingsLayout.setHorizontalGroup(
            pnlSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );
        pnlSettingsLayout.setVerticalGroup(
            pnlSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );

        pnlTabs.addTab("Settings", pnlSettings);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        int min_age = (int) spinnerMinAge.getValue();
        int max_age = (int) spinnerMaxAge.getValue();
        int amount = (int) spinnerAmount.getValue();
        int gender = sliderGender.getValue();
        String country = (String) lstCountry.getSelectedValue();
        boolean exportfile = tglFile.isSelected();
        boolean exportdb = tglDB.isSelected();
        Consts c = new Consts();
        c.setAge(min_age, max_age);
        c.setGender(gender);
        c.setCountry(country);
        writeToConsole("Minimum age: "+min_age);
        writeToConsole("Maximum age: "+max_age);
        writeToConsole("Amount: "+amount);
        writeToConsole("Gender: "+gender+"% male");
        writeToConsole("Country: "+country);
        writeToConsole("Export to file: " + exportfile);
        writeToConsole("Export to database: " + exportdb);
        writeToConsole("==============================");
        try {
            writeToConsole("Current Database size: "+Controller.getInstance().getDBSize() + " records");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        writeToConsole("==============================");
        try {
            Controller.getInstance().generate(amount, exportfile, exportdb);
        } catch (UnsupportedEncodingException | ClassNotFoundException | SQLException | ParseException | FileNotFoundException ex) {
            //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void sliderGenderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderGenderStateChanged
        int gender = sliderGender.getValue();
        lblMale.setText("("+gender+"%) Male");
        lblFemale.setText("Female ("+(100-gender)+"%)");
    }//GEN-LAST:event_sliderGenderStateChanged

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtConsole.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnReadDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadDBActionPerformed
        try {
            accounts = Controller.getInstance().readDB(-1);
            DefaultTableModel model = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int i, int i1) {
                    return false; //To change body of generated methods, choose Tools | Templates.
                }
            };
            List<String> list = new ArrayList<>();
            model.addColumn("ID");
            model.addColumn("Gender");
            model.addColumn("Firstname");
            model.addColumn("Lastname");
            model.addColumn("Phone");
            int count = 0;
            for(Person p:accounts){
                count++;
                list.add(count+"");
                list.add(p.getGender());
                list.add(p.getFirstname());
                list.add(p.getLastname());
                list.add(p.getPhone());
                model.addRow(list.toArray());
                list.clear();
            }
            tblDB.setModel(model);
            tblDB.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tblDB.getColumnModel().getColumn(0).setPreferredWidth(15);
            tblDB.getColumnModel().getColumn(1).setPreferredWidth(20);
            tblDB.setGridColor(Color.black);
            tblDB.setShowGrid(true);
        } catch (SQLException | ClassNotFoundException ex) {
            //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReadDBActionPerformed

    private void tblDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDBMouseClicked
        int row = tblDB.rowAtPoint(evt.getPoint());
        int col = tblDB.columnAtPoint(evt.getPoint());
        try {
            DefaultTableModel model = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int i, int i1) {
                    return false; //To change body of generated methods, choose Tools | Templates.
                }
            };
        
            DefaultTableModel model2 = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int i, int i1) {
                    return false; //To change body of generated methods, choose Tools | Templates.
                }
            };
            List<String> list = new ArrayList<>();
            model.addColumn("ID");
            model.addColumn("Country");
            model.addColumn("City");
            model.addColumn("Street");
            model.addColumn("Postcode");
            accounts = Controller.getInstance().readDB(row+1);
            list.add((row+1)+"");
            String country = "";
            switch(accounts.get(0).getAdress().getCountry()){
                case "bg":
                    country = "Belgium";
                    break;
                default:
                country = "Belgium";
            }
            list.add(country);
            list.add(accounts.get(0).getAdress().getState());
            list.add(accounts.get(0).getAdress().getStreetname() + " " + accounts.get(0).getAdress().getStreetnumber());
            list.add(accounts.get(0).getAdress().getPostcode());
            model.addRow(list.toArray());
            tblAddress.setModel(model);
            tblAddress.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tblAddress.getColumnModel().getColumn(0).setPreferredWidth(15);
            tblAddress.getColumnModel().getColumn(1).setPreferredWidth(45);
            tblAddress.getColumnModel().getColumn(2).setPreferredWidth(45);
            tblAddress.setGridColor(Color.black);
            tblAddress.setShowGrid(true);
            list.clear();
            
            model2.addColumn("ID");
            model2.addColumn("Brand");
            model2.addColumn("Model");
            model2.addColumn("Year");
            list.add((row+1)+"");
            list.add(accounts.get(0).getVehicle().getBrand());
            list.add(accounts.get(0).getVehicle().getModel());
            list.add(accounts.get(0).getVehicle().getYear()+"");
            model2.addRow(list.toArray());
            tblVehicle.setModel(model2);
            tblVehicle.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tblVehicle.getColumnModel().getColumn(0).setPreferredWidth(15);
            tblVehicle.setGridColor(Color.black);
            tblVehicle.setShowGrid(true);
            list.clear();
            
        } catch (SQLException | ClassNotFoundException ex) {
            //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblDBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }    
    private void writeToConsole(String message){
        txtConsole.append(message+"\n");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnReadDB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblFemale;
    private javax.swing.JLabel lblMale;
    private javax.swing.JLabel lblMaxAge;
    private javax.swing.JLabel lblMinAge;
    private javax.swing.JList lstCountry;
    public static final javax.swing.JProgressBar pgrBar = new javax.swing.JProgressBar();
    private javax.swing.JPanel pnlDisplay;
    private javax.swing.JPanel pnlGenerate;
    private javax.swing.JPanel pnlSettings;
    private javax.swing.JTabbedPane pnlTabs;
    private javax.swing.JSlider sliderGender;
    private javax.swing.JSpinner spinnerAmount;
    private javax.swing.JSpinner spinnerMaxAge;
    private javax.swing.JSpinner spinnerMinAge;
    private javax.swing.JTable tblAddress;
    private javax.swing.JTable tblDB;
    private javax.swing.JTable tblVehicle;
    private javax.swing.JToggleButton tglDB;
    private javax.swing.JToggleButton tglFile;
    private javax.swing.JTextArea txtConsole;
    // End of variables declaration//GEN-END:variables
}
